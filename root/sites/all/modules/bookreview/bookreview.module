<?php

/**
 * Implementation of hook_menu().
 */
function bookreview_menu() {
  $items = array();
  $items['konyvek'] = array(
    'title' => 'Könyvajánlók',
    'page callback' => 'bookreview_page',
    'file' => 'bookreview.inc',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['konyvek/attekintes'] = array(
    'title' => 'Áttekintés',
    'access callback' => TRUE,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['konyvek/bekuldes'] = array(
    'title' => 'Beküldés',
    'page callback' => 'bookreview_add_page',
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );
  return $items;
}

/**
 * Proxy függvény a node form hívásához. (A menu API 'file' csak lokális.)
 */
function bookreview_add_page() {
  include_once drupal_get_path('module', 'node') .'/node.pages.inc';
  return node_add('bookreview');
}

/**
 * Implmentation of hook_nodeapi().
 */
function bookreview_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'bookreview') {
    include_once 'bookreview.inc';
    return _bookreview_nodeapi($node, $op, $a3, $a4);
  }
}

/**
 * Implmentation of hook_form_alter().
 */
function bookreview_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'bookreview_node_form') {
    include_once 'bookreview.inc';
    return _bookreview_form_alter(&$form, $form_state, $form_id);
  }
}

/**
 * Implementation of hook_block().
 */
function bookreview_block($op = "list", $delta = 0) {
  if ($op == "list") {
    return array(
      0 => array('info' => 'Véletlenszerű könyvajánló'),
    );
  }
  elseif ($op == 'view') {
    switch ($delta) {
      case 0:
        return array(
          'subject' => 'Könyvajánló',
          'content' => _bookreview_block()
        );
    }
  }
}

function _bookreview_block($withteaser = FALSE) {
  if (($nid = db_result(db_query("SELECT nid FROM {node} WHERE type = 'bookreview' AND status = 1 ORDER BY RAND() LIMIT 1"))) && ($node = node_load($nid))) {
    if (count($node->files) && ($file = array_shift($node->files))) {
      $basename = $file->filename;
      $filepath = $_SERVER['DOCUMENT_ROOT'] .'/misc/fs/'. $basename;
      if ($details = image_get_info($filepath)) {
        $thumbfile = $_SERVER['DOCUMENT_ROOT'] .'/misc/fs/wlbt_'. $basename;
        //  file_delete($thumbfile);
        if ($details['width'] > 120) {
          if (file_exists($thumbfile) || image_scale($filepath, $thumbfile, 120, round($details['height'] / $details['width'] * 120))) {
            $basename = basename($thumbfile);
          }
        }
      }
      $link = '<a href="' . url('node/'. $node->nid) . '">';
      $img = file_create_url($basename);
      if ($withteaser) {
        return _weblabor_home_widget_node($node->nid, "<div class=\"attach-file attach-right\">{$link}<img src=\"{$img}\" alt=\"\" title=\"{$files[0]->title}\" /></a></div>");
      }
      else {
        return "<div class=\"attach-file attach-center\">{$link}<img src=\"{$img}\" alt=\"\" title=\"{$files[0]->title}\" /></a><p>{$link}{$files[0]->title}</a></p></div>";
      }
    }
  }
}
